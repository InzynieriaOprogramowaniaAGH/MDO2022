Zad 1.
Screen Zad_1 - git_client ukazuje juz zainstalowanego git wraz z obsługą kluczy ssh

Zad 2.
Repozytorium klonujemy za pomocą "git clone" oraz linku HTTPS skopiowanego z witryny github, poprawne klonowanie do folderu lokalnego ukazane jest na screenie Zad_2_git_clone

Zad 3.
Screeny Zad_3_ssh 1 oraz 2 pokazuje generowanie 2 kluczy ssh, jeden klucz zabezpieczony hasłem.
Screen numer 3 pokazuje dodanie kluczy publicznych do githuba, możemy to zrobić otwierając ustawienia swojego konta w serwisie github następnie klikając "New SSh key", w miejscu Key wklejamy zawartość naszego publicznego klucza. Klonowanie repozytorium za pomocą ssh pokazane jest na Zad_3_git_clonessh

Zad.4
Za pomocą polecenia "git checkout" możemy zmienić aktualna gałąź, jak pokazuje kolejny screen Zad_4_GCL03_branch użycie git checkout GCL03 pozwoliło nam zmienić gałąź na gałąź grupową 

Zad. 5 
Również za pomocą polecenia git checkout możemy tworzyć nową galąź.

Zad 6.
Po utworzeniu nowe gałęzi o nazwie PW307964 oraz utworzeniu nowego folderu o tej samej nazwie rozpoczynamy prace na naszej gałęzi. Po dodaniu zrzutów ekranu obrazujących  postępy pracy używamy polecenia "git add" które pozwoli gitowi rozpocząć śledzenie zmian/dodania nowych plików, następnie używamy polecenia "git commit" by wysłać zmiany dla naszego repozytorium. By wysłać nasze zmiany do zdalnego repozytorium używamy polecenia "git push", w naszym przypadku "git push --set-upstream origin PW307694" - screen Zad_6_git_add oraz Zad_6_git_push
Przy próbie użycia polecenia merge dla naszego lokalnego brancha na branch grupowy otrzymaliśmy błąd, branch grupowy jest GCL03 jest chroniony - Zad_6_push_fail.
Ustalnie tagu za pomocą polecenia "git tag"
